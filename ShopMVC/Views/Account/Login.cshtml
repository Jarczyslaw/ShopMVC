@using ShopMVC.ViewModels;

@model LoginViewModel

@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_SubLayout.cshtml";
}

<h4>Login</h4>

<div style="margin: 5px;">
    @using (Html.BeginForm(MVC.Account.ActionNames.Login, MVC.Account.Name, new { returnUrl = ViewBag.ReturnUrl }, FormMethod.Post))
    {
        Html.AntiForgeryToken();

        <div id="login-error">
            @Html.ValidationMessage("loginerror", string.Empty)
            @Html.ValidationSummary()
        </div>

        <table id="login-table">
            <tr>
                <td>
                    @Html.LabelFor(m => m.Email, "E-mail:")
                </td>
                <td>
                    @Html.TextBoxFor(m => m.Email)
                    <div class="login-validation-message">
                        @Html.ValidationMessageFor(m => m.Email)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(m => m.Password, "Password:")
                </td>
                <td>
                    @Html.PasswordFor(m => m.Password)
                    <div class="login-validation-message">
                        @Html.ValidationMessageFor(m => m.Password)
                    </div>
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    <div>
                        @Html.CheckBoxFor(m => m.RememberMe, new { @checked = "checked" })
                        @Html.LabelFor(m => m.RememberMe)
                    </div>
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    <input type="submit" value="Login" class="submit-link" style="height: 40px" />
                </td>
            </tr>
        </table>
    }
    <div>
        <a href="@Url.Action(MVC.Account.ActionNames.Register, MVC.Account.Name)">I don't have an account yet</a>
    </div>
</div>

@section AdditionalScripts
{
    @Scripts.Render(Links.Bundles.Scripts.Jquery)
    @Scripts.Render(Links.Bundles.Scripts.JqueryValidation)
}